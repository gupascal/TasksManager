<?php

namespace TMS\TasksManagerBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TaskRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaskRepository extends EntityRepository
{
	private function whereUserIs(\Doctrine\ORM\QueryBuilder $qb, $username = null)
	{
		if ($username !== null) {
			$qb->innerJoin('TMS\UsersBundle\Entity\User', 'u', 'WITH', 't.user_id = u.id')
				->andWhere('u.username = :username')
				->setParameter('username', $username);
		}
	}

	public function findAllRunningTasksOrderedByDueDate($username = null)
	{
		$qb = $this->createQueryBuilder('t');
		//$this->whereUserIs($qb, $username);
		return $qb->andWhere('t.date_completed IS NOT NULL')
					->orderBy('t.due_date', 'ASC')
					->getQuery()
					->getResult();
	}
	
	public function find($taskid, $username = null)
	{
		$qb = $this->createQueryBuilder('t');
		//$this->whereUserIs($qb, $username);
		return $qb->where('t.id = :id')
						->setParameter('id', $taskid)
						->getQuery()
						->getOneOrNullResult();
	}
	
	public function findNextTasks($limit)
	{
		$qb = $this->createQueryBuilder('t');
		//$this->whereUserIs($qb, $username);
		return $qb->andWhere('t.date_completed IS NOT NULL')
					->orderBy('t.due_date', 'ASC')
					//->setFirstResult($offset)
					->setMaxResults($limit)
					->getQuery()
					->getResult();
	}
}
